{"version":3,"sources":["components/NavBar.js","components/CardRow.js","components/Carousel.js","components/Announcement.js","components/ContactUs.js","App.js","serviceWorker.js","index.js","resources/logos/nibjj_yellow.jpg","resources/bjj-photos/armbar.jpg","resources/bjj-photos/triangle.jpg","resources/bjj-photos/smart-man-chair.jpg"],"names":["NavExample","props","toggleDropdown","bind","toggleNavbar","state","dropdownOpen","collapseOpen","this","setState","type","theme","expand","href","src","logo","className","onClick","open","navbar","active","React","Component","CardRow","ControlledCarousel","useState","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","Item","armbar","alt","Caption","triangle","smartman","Announcement","Jumbotron","Button","variant","ContactUs","sytle","padding","color","App","style","paddingLeft","paddingRight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.f4f47a26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  FormInput,\r\n  Collapse\r\n} from \"shards-react\";\r\n\r\nimport logo from '../resources/logos/nibjj_yellow.jpg';\r\n\r\n\r\nexport default class NavExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleDropdown = this.toggleDropdown.bind(this);\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      collapseOpen: false\r\n    };\r\n  }\r\n\r\n  toggleDropdown() {\r\n    this.setState({\r\n      ...this.state,\r\n      ...{\r\n        dropdownOpen: !this.state.dropdownOpen\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.setState({\r\n      ...this.state,\r\n      ...{\r\n        collapseOpen: !this.state.collapseOpen\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar type=\"dark\" theme=\"dark\" expand=\"md\">\r\n        <NavbarBrand href=\"#\">        \r\n        <img src={logo} className=\"App-logo\"  />\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={this.toggleNavbar} />\r\n\r\n        <Collapse open={this.state.collapseOpen} navbar>\r\n          <Nav navbar>\r\n          <NavItem>\r\n              <NavLink active href=\"#\">\r\n              Upcoming Competitions\r\n              </NavLink>\r\n        </NavItem>\r\n\r\n\r\n            <NavItem>\r\n              <NavLink active href=\"#\">\r\n                About Us\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n              <NavLink active href=\"#\">\r\n                Media\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n              <NavLink active href=\"#\">\r\n                Contact\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n              <NavLink active href=\"#\">\r\n                Smoothcomp\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Container, Row, Col, Card, CardBody, CardImg } from \"shards-react\";\r\n\r\nexport default function CardRow() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n      </Row>    \r\n    </Container>\r\n  );\r\n}","import Carousel from 'react-bootstrap/Carousel'\r\nimport React from \"react\";\r\n\r\nimport armbar from './../resources/bjj-photos/armbar.jpg'\r\nimport triangle from './../resources/bjj-photos/triangle.jpg'\r\nimport smartman from './../resources/bjj-photos/smart-man-chair.jpg'\r\n\r\nexport default function ControlledCarousel() {\r\n    const [index, setIndex] = React.useState(0);\r\n  \r\n    const handleSelect = (selectedIndex, e) => {\r\n      setIndex(selectedIndex);\r\n    };\r\n  \r\n    return (\r\n      <Carousel activeIndex={index} onSelect={handleSelect} className=\"Carousel\">\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={armbar}\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3 className=\"Carousel-text\">NoGi</h3>\r\n            <p className=\"Carousel-text\">NoGi competitions following IBJJF rulesets</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={triangle}\r\n            alt=\"Second slide\"\r\n          />\r\n  \r\n          <Carousel.Caption>\r\n            <h3 className=\"Carousel-text\">Gi</h3>\r\n            <p className=\"Carousel-text\">Gi competitions following IBJJF rulesets</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={smartman}\r\n            alt=\"Third slide\"\r\n          />\r\n  \r\n          <Carousel.Caption>\r\n            <h3 className=\"Carousel-text\">Professionalism</h3>\r\n            <p className=\"Carousel-text\">\r\n              We wear glasses \r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    );\r\n  }","import React from \"react\";\r\nimport {Jumbotron, Button} from 'react-bootstrap'\r\n\r\nexport default function Announcement() {\r\n  return (\r\n<Jumbotron>\r\n  <h1>New Competition Announced!</h1>\r\n  <p>\r\n    Post Lockdown BJJ Tournament - September 2025\r\n  </p>\r\n  <p>\r\n    <a href=\"Announcement\"><Button variant=\"primary\">Register Now</Button></a>\r\n  </p>\r\n</Jumbotron>\r\n  );\r\n}","import React from \"react\";\r\nimport { FormTextarea } from \"shards-react\";\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\nexport default function ContactUs() {\r\n  return (\r\n    <div className=\"Contact-Us\">\r\n    <div className=\"Contact-Us-form\">\r\n        <h2 className=\"Contact-Us-text\">Contact</h2>\r\n        <p className=\"Contact-Us-text\">Please leave your details below and we will get back to you as soon as possible</p>\r\n        <h5 className=\"Contact-Us-text\" >Name: </h5>\r\n        <FormTextarea />\r\n        <h5 className=\"Contact-Us-text\" >Email: </h5>\r\n        <FormTextarea />\r\n        <h5 className=\"Contact-Us-text\" >Message: </h5>\r\n        <FormTextarea />\r\n        <div sytle={{\r\n            padding: 20\r\n        }}>\r\n            <Button color=\"primary\">Submit</Button>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport logo from './resources/logos/nibjj_yellow.jpg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nimport NavBar from './components/NavBar.js'\nimport CardRow from './components/CardRow.js'\nimport Carousel from './components/Carousel.js'\nimport Announcement from './components/Announcement.js'\nimport ContactUs from './components/ContactUs.js'\n\nfunction App() {\n  return (\n    <div className=\"Main\">\n    <div className=\"NavBar\">\n      <NavBar />\n    </div>\n\n    <div className=\"App\">\n\n          <Announcement />\n          <h1 style={{\n            padding: 20\n          }}> About NI BJJ </h1>\n          <p style={{\n            paddingLeft: 80,\n            paddingRight: 80,\n          }}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam odio urna, dapibus eget erat tincidunt, tempus aliquet arcu. Maecenas tincidunt, arcu sit amet rutrum imperdiet, ante eros interdum mi, sed luctus nisi leo sit amet lorem. Pellentesque non sodales ligula, a faucibus libero. Fusce dignissim auctor felis, sed convallis justo fringilla sodales. Nam elementum, turpis eu rhoncus condimentum, tortor felis scelerisque metus, at posuere velit diam quis libero. Cras tempor sagittis odio in lacinia. Maecenas facilisis nulla at congue viverra. Phasellus sollicitudin dolor id blandit blandit. Praesent ullamcorper libero sed mollis volutpat. Aliquam scelerisque tempus lacus, a porta libero iaculis ac. Integer quis justo mattis, sagittis dui convallis, eleifend quam. Vivamus sit amet egestas libero. Vestibulum dapibus arcu in nulla facilisis sollicitudin.\n\n          </p>\n          <CardRow />\n          <Carousel />\n          <ContactUs />\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/nibjj_yellow.811c13d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/armbar.aba6ebc1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/triangle.1f7bb7c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/smart-man-chair.dc385185.jpg\";"],"sourceRoot":""}